FORMAT: 1A
HOST: https://onepercentclub.com

# Bluebottle
Bluebottle API is a the crowdsourcing API framework initiated by the 1%CLUB.

# Group Tasks
Tasks related resources of the **Bluebottle API**

## Tasks Collection [/api/bb_tasks/]

### List all Tasks [GET]
+ Response 200 (application/json)

        {
          count: 2,
          next: null,
          previous: null,
          results: 
            [{
              "id": 1, 
              "title": "Buy a minivan",
            }, {
              "id": 2,
              "title": "Paint the minivan"
            }]
        }

## Task [/api/bb_tasks/{id}]
A single Task object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Task to perform action with. Has example value.

### Retrieve a Task [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            {
                members: [ ],
                files: [ ],
                project: "minivan-for-peace",
                skill: 6,
                author: {
                    id: 2616,
                    first_name: "",
                    last_name: "",
                    username: "brian",
                    avatar: "",
                    full_name: "Brian Gooddeeds",
                    short_name: "Brian",
                },
                status: "open",
                tags: [ ],
                meta_data: {
                    title: "Paint a Minivan",
                    description: "Paint a minivan some crazy colours",
                    fb_title: null,
                    url: null,
                    tweet: null,
                    image: null,
                    keywords: "",
                },
                id: 53,
                title: "Paint a Minivan",
                description: "Paint a minivan some crazy colours",
                end_goal: "",
                location: "",
                time_needed: "1",
                people_needed: 1,
                date_status_change: null,
                deadline: "2014-03-04T11:55:12Z",
                created: "2014-03-04T10:55:13.548Z",
                updated: "2014-03-04T10:55:13.571Z",
            }

### Remove a Task [DELETE]
+ Response 204

## Task Files Collection [/api/bb_tasks/files/{?task}]
+ Parameters
    + task (required, number, `1`) ... Numeric `task` id of the Task to perform action with. Has example value.

### List all Task Files [GET]
+ Response 200 (application/json)

        {
          count: 1,
          next: null,
          previous: null,
          results: 
            [{
              author: {
                id: 429,
                first_name: "",
                last_name: "",
                username: "brian",
                avatar: http://bluebottle.apiary.io/static/media/cache/75/4b/754b98c2a8171717c6428912ec6293d2.jpg,
                full_name: "Brian Gooddeeds",
                short_name: "Brian",
              },
              file: {
                url: "/static/media/task_files/frog.jpg",
                name: "frog.jpg",
                size: "70.1 KB",
              },
              id: 1,
              title: "Let's plant trees",
              created: "2014-02-03T15:45:57.981Z",
              updated: "2014-02-03T15:45:57.983Z",
              task: 46,
            }]
        }

## Task File [/api/bb_tasks/files/{id}]
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Task to perform action with. Has example value.

### Retrieve a Task File [GET]
+ Response 200 (application/json)

        {
          author: {
            id: 429,
            first_name: "",
            last_name: "",
            username: "brian",
            avatar: http://bluebottle.apiary.io/static/media/cache/75/4b/754b98c2a8171717c6428912ec6293d2.jpg,
            full_name: "Brian Gooddeeds",
            short_name: "Brian",
          },
          file: {
            url: "/static/media/task_files/frog.jpg",
            name: "frog.jpg",
            size: "70.1 KB",
          },
          id: 1,
          title: "Let's plant trees",
          created: "2014-02-03T15:45:57.981Z",
          updated: "2014-02-03T15:45:57.983Z",
          task: 46,
        }

# Group Projects
Projects related resources of the **Bluebottle API**

## Projects Collection [/api/bb_projects/]

### List all Projects [GET]
+ Response 200 (application/json)

        {
          count: 1,
          next: null,
          previous: null,
          results: 
            [{
              "id": 1,
              "title": "Minivan For Peace"
            }]
        }

### Create a Project [POST]
+ Request (application/json)

        { "title": "Minivan For Equality" }

+ Response 200 (application/json)

        { "id": 2, "title": "Minivan For Equality" }

## Project [/api/bb_projects/{id}]
A single Project object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Body

            { "id": 2, "title": "Minivan For Equality" }

### Remove a Note [DELETE]
+ Response 204

# Group Organizations
Organizations related resources of the **Bluebottle API**

## Organizations Collection [/api/bb_organizations/]

### List all Organizations [GET]
+ Response 200 (application/json)

        {
          count: 1,
          next: null,
          previous: null,
          results: 
            [{
              "id": 1,
              "name": "Minivans-R-Us",
            }]
        }

### Create an Organization [POST]
+ Request (application/json)

        { "name": "Tricycles Inc" }

+ Response 200 (application/json)

        { "id": 2, "name": "Tricycles Inc" }

## Project [/api/bb_organizations/{id}]
A single Organization object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Organization to perform action with. Has example value.

### Retrieve a Organization [GET]
+ Response 200 (application/json)

    + Body

            { "id": 2, "name": "Tricycles Inc" }

### Remove a Organization [DELETE]
+ Response 204

## Organization Documents  [/api/bb_organizations/documents/manage/{?organization}]

+ Parameters
    + organization (required, number, `1`) ... Numeric `organization` id of the Organization to perform action with. Has example value.

### List all Organization Documents [GET]
+ Response 200 (application/json)

        {
          count: 1,
          next: null,
          previous: null,
          results: 
            [{
              author: {
                id: 429,
                first_name: "",
                last_name: "",
                username: "brian",
                avatar: http://bluebottle.apiary.io/static/media/cache/75/4b/754b98c2a8171717c6428912ec6293d2.jpg,
                full_name: "Brian Gooddeeds",
                short_name: "Brian"
              },
              file: {
                url: "/static/media/task_files/frog.jpg",
                name: "frog.jpg",
                size: "70.1 KB"
              },
              id: 1,
              title: "Let's plant trees",
              created: "2014-02-03T15:45:57.981Z",
              updated: "2014-02-03T15:45:57.983Z",
              task: 46
            }]
        } -->

## Organization Document [/api/bb_organizations/documents/manage/{id}]
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Document to perform action with. Has example value.

### Retrieve a Organization Document [GET]
+ Response 200 (application/json)

        {
          author: {
            id: 429,
            first_name: "",
            last_name: "",
            username: "brian",
            avatar: http://bluebottle.apiary.io/static/media/cache/75/4b/754b98c2a8171717c6428912ec6293d2.jpg,
            full_name: "Brian Gooddeeds",
            short_name: "Brian"
          },
          file: {
            url: "/static/media/task_files/frog.jpg",
            name: "frog.jpg",
            size: "70.1 KB"
          },
          id: 1,
          title: "Let's plant trees",
          created: "2014-02-03T15:45:57.981Z",
          updated: "2014-02-03T15:45:57.983Z",
          task: 46
        }

## Organizations Manage Collection [/api/bb_organizations/manage{?organization}]
+ Parameters
    + organization (required, number, `1`) ... Numeric `organization` of the Organization to perform action with. Has example value.

### List all Organizations [GET]
+ Response 200 (application/json)

        {
          count: 1,
          next: null,
          previous: null,
          results: 
            [{
              "id": 1,
              "name": "Minivans-R-Us"
            }]
        }

### Create an Organization [POST]
+ Request (application/json)

        { "name": "Tricycles Inc" }

+ Response 200 (application/json)

        { "id": 2, "name": "Tricycles Inc" }

## Organization [/api/bb_organizations/manage/{id}]
A single Organization (Manage) object with all its details
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Organization to perform action with. Has example value.

### Retrieve a Organization [GET]
+ Response 200 (application/json)

    + Body

            { "id": 2, "name": "Tricycles Inc" }

### Remove a Organization [DELETE]
+ Response 204

# Group Orders
Orders related resources of the **Donations API**

## Orders  [/api/orders/]
### List all Orders [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "total_amount": 100, 
            "user": 1, 
            "status": "success",
            "country": 149,
            "created": "2014-07-18T20:42:20.315Z"
        }, {
            "id": 2, 
            "total_amount": 50, 
            "user": 1, 
            "status": "success",
            "country": 149,
            "created": "2014-07-18T20:42:20.315Z"
        }]

## Orders [/api/orders/{id}/]
A single Order object with all its details
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Order to perform action with. Has example value.

### Retrieve an Order [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "total_amount": 50, 
                "user": 1,
                "status": "success",
                "country": 149,
                "created": "2014-07-18T20:42:20.315Z"
            }


# Group My Orders
Orders related resources of the **Donations API**

## My Order Collection [/api/orders/my/]
### List all My Orders [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "total_amount": 100, 
            "user": 1, 
            "status": "success",
            "country": 1,
            "created": "2014-07-18T20:42:20.315Z"
        }, {
            "id": 2, 
            "total_amount": 50, 
            "user": 1, 
            "status": "success",
            "country": 149,
            "created": "2014-07-18T20:42:20.315Z"
        }]


### Create an Order [POST]
+ Request (application/json)

        { "user_id": 1 }

+ Response 200 (application/json)

        { 
            "id": 3, 
            "total_amount": 0, 
            "user": 1, 
            "status": "in_progress",
            "country_id": 149,
            "created": "2014-07-18T20:42:20.315Z"
        }

## My Order [/api/orders/my/{id}/]
A single Order object with all its details
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Order to perform action with. Has example value.

### Retrieve an Order [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "total_amount": 50, 
                "user": 1,
                "status": "success",
                "country": 149,
                "created": "2014-07-18T20:42:20.315Z"
            }

### Remove an Order [DELETE]
+ Response 204


# Group Donations
Donation (public details) related resources of the **Donations API**

## Donations [/api/donations/{id}]
A single Donation object with public details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Donation to perform action with. Has example value.

### Retrieve a Donation [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "amount": 30, 
                "project": 1, 
                "fundraiser": null, 
                "order": 1,
                "created": "2014-07-18T20:42:20.315Z",
            }

## Project Donations Collection [/api/donations/project/?project={project_id}]
### List all Donations by Project [GET]
+ Parameters
    + project_id (optional, number, `1`) ... Numeric `project_id` of the Donation to perform action with. Has example value.

+ Response 200 (application/json)
    {
        "count": 2,
        "next": null,
        "previous": null,
        "results": [
            {
                "id": 1, 
                "amount": 20, 
                "project": 1, 
                "fundraiser": null, 
                "order": 1,
                "created": "2014-07-21T18:48:40.440Z",
                "user": null
            }, {
                "id": 2, 
                "amount": 30, 
                "project": 1, 
                "fundraiser": null, 
                "order": 1,
                "created": "2014-07-21T18:48:40.440Z",
                "user": {
                    "id": 22950, 
                    "avatar": "http://onepercentclub.com/static/media/cache/0e/ef/0eef5341ae476d32ba01f646e558646f.jpg", 
                    "full_name": "Louise  Seeto", 
                    "short_name": "Louise "
                }
            }
        ]
    }


## User Donations Collection [/api/donations/user/?user={user_id}]
### List all Donations by User [GET]
+ Parameters
    + user_id (optional, number, `1`) ... Numeric `user_id` of the Donation to perform action with. Has example value.

+ Response 200 (application/json)

        [{
            "id": 1, 
            "amount": 20, 
            "fundraiser": null, 
            "order": 1,
            "created": "2014-07-18T20:42:20.315Z",
            "project": {
                "id": "luluinmagu", 
                "title": "Luluinmagu", 
                "image": "http://onepercentclub.com/static/media/cache/c6/61/c661be75e95b6b6829c5b7df1e17446f.jpg", 
                "status": 5, 
                "pitch": "I need funds to build a clinic in the Magu District of Tanzania (East Africa). I'm Lulu. If you'd like a more detailed account of this project please visit www.luluinmagu.com.\r\n\r\n ", 
                "country": {
                    "id": 229, 
                    "name": "Tanzania", 
                    "subregion": "Eastern Africa"
                }, 
                "task_count": 0, 
                "is_campaign": false, 
                "amount_asked": "11000.00", 
                "amount_donated": "12256.00", 
                "amount_needed": "0.00", 
                "deadline": "2014-09-03T15:10:44Z", 
                "owner": {
                    "id": 22950, 
                    "first_name": "Louise ", 
                    "last_name": "Seeto", 
                    "username": "louiseseeto", 
                    "avatar": "http://onepercentclub.com/static/media/cache/0e/ef/0eef5341ae476d32ba01f646e558646f.jpg", 
                    "full_name": "Louise  Seeto", 
                    "short_name": "Louise "
                }, 
                "partner": null
            }            
        }, {
            "id": 2, 
            "amount": 30, 
            "project": 1, 
            "fundraiser": null, 
            "order": 1,
            "created": "2014-07-20T20:42:20.315Z",
            "project": {
                "id": "luluinmagu", 
                "title": "Luluinmagu", 
                "image": "http://onepercentclub.com/static/media/cache/c6/61/c661be75e95b6b6829c5b7df1e17446f.jpg", 
                "status": 5, 
                "pitch": "I need funds to build a clinic in the Magu District of Tanzania (East Africa). I'm Lulu. If you'd like a more detailed account of this project please visit www.luluinmagu.com.\r\n\r\n ", 
                "country": {
                    "id": 229, 
                    "name": "Tanzania", 
                    "subregion": "Eastern Africa"
                }, 
                "task_count": 0, 
                "is_campaign": false, 
                "amount_asked": "11000.00", 
                "amount_donated": "12256.00", 
                "amount_needed": "0.00", 
                "deadline": "2014-09-03T15:10:44Z", 
                "owner": {
                    "id": 22950, 
                    "first_name": "Louise ", 
                    "last_name": "Seeto", 
                    "username": "louiseseeto", 
                    "avatar": "http://onepercentclub.com/static/media/cache/0e/ef/0eef5341ae476d32ba01f646e558646f.jpg", 
                    "full_name": "Louise  Seeto", 
                    "short_name": "Louise "
                }, 
                "partner": null
            }            
        }]

# Group My Donations
My Donation related resources of the **Donations API**

## My Donation Collection [/api/donations/my/]
### List all My Donations [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "amount": 20, 
            "fundraiser": null, 
            "order": 1, 
            "user": 1,
            "status": "pending",
            "created": "2014-07-18T20:42:20.315Z",
            "project": {
                "id": "luluinmagu", 
                "title": "Luluinmagu", 
                "image": "http://onepercentclub.com/static/media/cache/c6/61/c661be75e95b6b6829c5b7df1e17446f.jpg", 
                "status": 5, 
                "pitch": "I need funds to build a clinic in the Magu District of Tanzania (East Africa). I'm Lulu. If you'd like a more detailed account of this project please visit www.luluinmagu.com.\r\n\r\n ", 
                "country": {
                    "id": 229, 
                    "name": "Tanzania", 
                    "subregion": "Eastern Africa"
                }, 
                "task_count": 0, 
                "is_campaign": false, 
                "amount_asked": "11000.00", 
                "amount_donated": "12256.00", 
                "amount_needed": "0.00", 
                "deadline": "2014-09-03T15:10:44Z", 
                "owner": {
                    "id": 22950, 
                    "first_name": "Louise ", 
                    "last_name": "Seeto", 
                    "username": "louiseseeto", 
                    "avatar": "http://onepercentclub.com/static/media/cache/0e/ef/0eef5341ae476d32ba01f646e558646f.jpg", 
                    "full_name": "Louise  Seeto", 
                    "short_name": "Louise "
                }, 
                "partner": null
            }            
        }, {
            "id": 2, 
            "amount": 30, 
            "fundraiser": 1, 
            "order": 2, 
            "user": 1,
            "status": "closed",
            "created": "2014-07-18T20:42:20.315Z",
            "project": {
                "id": "luluinmagu", 
                "title": "Luluinmagu", 
                "image": "http://onepercentclub.com/static/media/cache/c6/61/c661be75e95b6b6829c5b7df1e17446f.jpg", 
                "status": 5, 
                "pitch": "I need funds to build a clinic in the Magu District of Tanzania (East Africa). I'm Lulu. If you'd like a more detailed account of this project please visit www.luluinmagu.com.\r\n\r\n ", 
                "country": {
                    "id": 229, 
                    "name": "Tanzania", 
                    "subregion": "Eastern Africa"
                }, 
                "task_count": 0, 
                "is_campaign": false, 
                "amount_asked": "11000.00", 
                "amount_donated": "12256.00", 
                "amount_needed": "0.00", 
                "deadline": "2014-09-03T15:10:44Z", 
                "owner": {
                    "id": 22950, 
                    "first_name": "Louise ", 
                    "last_name": "Seeto", 
                    "username": "louiseseeto", 
                    "avatar": "http://onepercentclub.com/static/media/cache/0e/ef/0eef5341ae476d32ba01f646e558646f.jpg", 
                    "full_name": "Louise  Seeto", 
                    "short_name": "Louise "
                }, 
                "partner": null
            }            
        }]

### Create a Donation [POST]
+ Request (application/json)

        { 
            "amount": 30, 
            "project": 1, 
            "fundraiser": null, 
            "order": 1,
            "user_id": 1
        }

+ Response 200 (application/json)

        { 
            "id": 3, 
            "amount": 30, 
            "project": 1, 
            "fundraiser": null, 
            "order": 1,
            "user_id": 1,
            "status": "open", 
            "created": "2014-07-18T20:42:20.315Z" 
        }
        
## My Donations [/api/donations/my/{id}]
A single My Donation object with all its details
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Donation to perform action with. Has example value.

### Retrieve a single My Donation [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "amount": 30, 
                "project": null, 
                "fundraiser": 1, 
                "order": 2, 
                "status": "closed",
                "user": 1,
                "created": "2014-07-18T20:42:20.315Z" 
            }

## My Project Donations Collection [/api/donations/my-projects/]
### List all My Project Donations [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "project": 1, 
            "amount": 20, 
            "user": 1, 
            "order": 1, 
            "status": "closed", 
            "created": "2014-07-18T20:42:20.315Z"
        }, {
            "id": 2, 
            "project": 1, 
            "amount": 30, 
            "user": 2, 
            "order": 2, 
            "status": "pending", 
            "created": "2014-07-20T20:42:20.315Z"
        }, {
            "id": 2, 
            "project": 2, 
            "amount": 30, 
            "user": 2, 
            "order": 3, 
            "status": "closed", 
            "created": "2014-07-20T20:42:20.315Z"
        }]

## My Project Donations [/api/donations/my-projects/{project_id}/]
+ Parameters
    + project_id (required, number, `1`) ... Numeric `project_id` of the My Donation to perform action with. Has example value.

### List all Donations for My Project [GET]
+ Response 200 (application/json)

    + Body

            [{
                "id": 1, 
                "project": 1,
                "amount": 50, 
                "user": 1, 
                "order": 1, 
                "status": "closed", 
                "created": "2014-07-18T20:42:20.315Z"
            }, {
                "id": 2, 
                "project_id": 1, 
                "amount": 10, 
                "user_id": 2, 
                "order_id": 2, 
                "status": "pending", 
                "created": "2014-07-20T20:42:20.315Z"
            }]


## My Fundraiser Donations Collection [/api/donations/my-fundraisers/]
### List all My Fundraiser Donations [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "fundraiser": 1, 
            "amount": 20, 
            "user": 1, 
            "order": 4, 
            "status": "closed", 
            "created": "2014-07-18T20:42:20.315Z"
        }, {
            "id": 2, 
            "fundraiser": 1, 
            "amount": 30, 
            "user": 2, 
            "order": 5, 
            "status": "pending", 
            "created": "2014-07-20T20:42:20.315Z"
        }, {
            "id": 2, 
            "fundraiser": 2, 
            "amount": 30, 
            "user": 2, 
            "order": 6, 
            "status": "closed", 
            "created": "2014-07-22T20:42:20.315Z"
        }]

## My Fundraiser Donations [/api/donations/my-fundraisers/{fundraiser_id}/]
+ Parameters
    + fundraiser_id (required, number, `1`) ... Numeric `fundraiser_id` of the My Donation to perform action with. Has example value.

### List all Donations for one of My Fundraisers [GET]
+ Response 200 (application/json)

        [{
          "id": 1, 
          "fundraiser": 1, 
          "amount": 50, 
          "user": 1, 
          "order": 4, 
          "status": "closed", 
          "created": "2014-07-20T20:42:20.315Z"
        }, {
          "id": 2, 
          "fundraiser": 1, 
          "amount": 10, 
          "user": 2, 
          "order": 5, 
          "status": "pending", 
          "created": "2014-07-20T20:42:20.315Z"
        }]

# Group Payments
Payment related resources of the **Donations API**

## Payments Collection [/api/payments/]
### List all Payments [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "payment_method": 1, 
            "order": 1, 
            "status": "closed",
            "created": "2014-07-17T20:42:20.315Z",
            "updated": "2014-07-17T20:42:20.315Z",
            "closed": null
        }, {
            "id": 2, 
            "payment_method": 1, 
            "order": 2, 
            "status": "pending",
            "created": "2014-07-18T20:42:20.315Z",
            "updated": "2014-07-18T22:42:20.315Z",
            "closed": null
        }]

### Create a Payment [POST]
+ Request (application/json)

        { "payment_method_id": 1, "order_id": 1 }

+ Response 200 (application/json)

        { 
            "id": 3, 
            "payment_method": 1, 
            "order": 1, 
            "status": "open",
            "created": "2014-07-18T20:42:20.315Z",
            "updated": "2014-07-18T22:42:20.315Z",
            "closed": null
        }
        
## Payments [/api/payments/{id}]
A single Payment object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Order to perform action with. Has example value.

### Retrieve a Payment [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "payment_method": 1, 
                "order": 2, 
                "status": "pending",
                "created": "2014-07-18T20:42:20.315Z",
                "updated": "2014-07-18T22:42:20.315Z",
                "closed": null
            }

### Remove a Payment [DELETE]
+ Response 204

## Payment CC-Type [/api/payments/cc-type/{cc_number}]
A single Payment object with all its details

+ Parameters
    + cc_number (required, number, ``) ... Numeric `cc_number` of the Credit Card number to check. Has example value.
    
### Check Payment Method Type [GET]
+ Response 200 (application/json)

    + Body

            { 
            }

# Group My Payments
Payment related resources of the **Donations API**

## My Payments Collection [/api/payments/my/]
### List all My Payments [GET]
+ Response 200 (application/json)

        [{
            "id": 1, 
            "payment_method": 1, 
            "order": 1, 
            "status": "closed",
            "integration_details": {
                "url": null,
                "method": null,
                "payload": null,
                "type": null,
            },
            "created": "2014-07-17T20:42:20.315Z",
            "updated": "2014-07-17T20:42:20.315Z",
            "closed": null
        }, {
            "id": 2, 
            "payment_method": 1, 
            "order": 2, 
            "status": "pending",
            "integration_details": {
                "url": null,
                "method": null,
                "payload": null,
                "type": null,
            },
            "created": "2014-07-18T20:42:20.315Z",
            "updated": "2014-07-18T22:42:20.315Z",
            "closed": null
        }]

### Create a Payment [POST]
+ Request (application/json)

        { "payment_method_id": 1, "order_id": 1 }

+ Response 200 (application/json)

        { 
            "id": 3, 
            "payment_method": 1, 
            "order": 1, 
            "status": "open",
            "integration_details": {
                "url": "http://localhost:8000/payment-provider",
                "method": "get",
                "payload": null,
                "type": "redirect",
            },
            "created": "2014-07-18T20:42:20.315Z",
            "updated": "2014-07-18T22:42:20.315Z",
            "closed": null
        }

## My Payments [/api/payments/my/{payment_id}]
A single Payment object with all its details

+ Parameters
    + payment_id (required, number, `1`) ... Numeric `payment_id` of the Payment to perform action with. Has example value.

### Retrieve a Payment [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 2, 
                "payment_method": 1, 
                "order": 2, 
                "status": "pending",
                "integration_details": {
                    "url": null,
                    "method": null,
                    "payload": null,
                    "type": null,
                },
                "created": "2014-07-18T20:42:20.315Z",
                "updated": "2014-07-18T22:42:20.315Z",
                "closed": null
            }
        
# Group Payment Methods
Payment Method related resources of the **Donations API**

## Payment Methods [/api/payments/payment-methods/?amount={amount}&country={country_code}]
+ Parameters
    + amount (required, number, `50`) ... Numeric `amount` of the payment total amount.
    + country (required, string, `nl`) ... String `country_code` of two character country code for the current user.

### List all PaymentMethods [GET]
+ Response 200 (application/json)

        {
            "country": "NL", 
            "results": [
                {
                    "profile": "ideal", 
                    "restricted_countries": [
                        "NL"
                    ], 
                    "name": "iDEAL", 
                    "supports_recurring": false, 
                    "provider": "docdata", 
                    "id": "ideal"
                }, 
                {
                    "profile": "directdebit", 
                    "restricted_countries": [
                        "NL"
                    ], 
                    "name": "Direct Debit", 
                    "provider": "docdata", 
                    "supports_single": false, 
                    "max_amount": 10000, 
                    "id": "direct-debit", 
                    "supports_recurring": true
                }, 
                {
                    "profile": "creditcard", 
                    "supports_recurring": false, 
                    "id": "creditcard", 
                    "name": "Credit Cards", 
                    "provider": "docdata"
                }, 
                {
                    "profile": "webmenu", 
                    "supports_recurring": true, 
                    "id": "webmenu", 
                    "name": "Web Menu", 
                    "provider": "docdata"
                }, 
                {
                    "profile": "ideal", 
                    "restricted_countries": [
                        "NL"
                    ], 
                    "name": "iDEAL", 
                    "supports_recurring": false, 
                    "provider": "adyen"
                }, 
                {
                    "profile": "paypal", 
                    "supports_single": false, 
                    "max_amount": 1000, 
                    "name": "PayPal", 
                    "provider": "adyen"
                }, 
                {
                    "profile": "mastercard", 
                    "name": "MasterCard", 
                    "supports_recurring": false, 
                    "provider": "adyen"
                }
            ]
        }
